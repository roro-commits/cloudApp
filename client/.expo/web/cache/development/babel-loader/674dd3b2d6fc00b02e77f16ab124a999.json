{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/roroblacc/Desktop/App Project/client/node_modules/react-native-tab-view/src/TabViewPagerExperimental.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PagerRendererPropType } from \"./TabViewPropTypes\";\nvar DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 75,\n  friction: 25\n};\n\nvar TabViewPagerExperimental = function (_React$Component) {\n  _inherits(TabViewPagerExperimental, _React$Component);\n\n  var _super = _createSuper(TabViewPagerExperimental);\n\n  function TabViewPagerExperimental() {\n    var _this;\n\n    _classCallCheck(this, TabViewPagerExperimental);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handleHandlerStateChange = function (event) {\n      var GestureHandler = _this.props.GestureHandler;\n\n      if (event.nativeEvent.state === GestureHandler.State.END) {\n        var _this$props = _this.props,\n            navigationState = _this$props.navigationState,\n            layout = _this$props.layout,\n            _this$props$swipeDist = _this$props.swipeDistanceThreshold,\n            swipeDistanceThreshold = _this$props$swipeDist === void 0 ? layout.width / 1.75 : _this$props$swipeDist,\n            _this$props$swipeVelo = _this$props.swipeVelocityThreshold,\n            swipeVelocityThreshold = _this$props$swipeVelo === void 0 ? 150 : _this$props$swipeVelo;\n        var _event$nativeEvent = event.nativeEvent,\n            translationX = _event$nativeEvent.translationX,\n            translationY = _event$nativeEvent.translationY,\n            velocityX = _event$nativeEvent.velocityX,\n            velocityY = _event$nativeEvent.velocityY;\n        var currentIndex = typeof _this._pendingIndex === 'number' ? _this._pendingIndex : navigationState.index;\n        var nextIndex = currentIndex;\n\n        if (Math.abs(translationX) > Math.abs(translationY) && Math.abs(velocityX) > Math.abs(velocityY) && (Math.abs(translationX) > swipeDistanceThreshold || Math.abs(velocityX) > swipeVelocityThreshold)) {\n          nextIndex = Math.round(Math.min(Math.max(0, currentIndex - translationX / Math.abs(translationX)), navigationState.routes.length - 1));\n        }\n\n        if (!isFinite(nextIndex) || !_this.props.canJumpToTab(_this.props.navigationState.routes[nextIndex])) {\n          nextIndex = currentIndex;\n        }\n\n        _this._transitionTo(nextIndex, velocityX);\n      }\n    };\n\n    _this._transitionTo = function (index, velocity) {\n      var offset = -index * _this.props.layout.width;\n\n      if (_this.props.animationEnabled === false) {\n        _this.props.panX.setValue(0);\n\n        _this.props.offsetX.setValue(offset);\n\n        return;\n      }\n\n      var timing = DefaultTransitionSpec.timing,\n          transitionConfig = _objectWithoutProperties(DefaultTransitionSpec, [\"timing\"]);\n\n      var useNativeDriver = _this.props.useNativeDriver;\n      Animated.parallel([timing(_this.props.panX, _objectSpread(_objectSpread({}, transitionConfig), {}, {\n        toValue: 0,\n        velocity: velocity,\n        useNativeDriver: useNativeDriver\n      })), timing(_this.props.offsetX, _objectSpread(_objectSpread({}, transitionConfig), {}, {\n        toValue: offset,\n        velocity: velocity,\n        useNativeDriver: useNativeDriver\n      }))]).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          _this.props.jumpToIndex(index);\n\n          _this._pendingIndex = null;\n        }\n      });\n      _this._pendingIndex = index;\n    };\n\n    return _this;\n  }\n\n  _createClass(TabViewPagerExperimental, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.navigationState.index !== this.props.navigationState.index) {\n        this._transitionTo(this.props.navigationState.index);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          GestureHandler = _this$props2.GestureHandler,\n          panX = _this$props2.panX,\n          offsetX = _this$props2.offsetX,\n          layout = _this$props2.layout,\n          navigationState = _this$props2.navigationState,\n          swipeEnabled = _this$props2.swipeEnabled,\n          children = _this$props2.children;\n      var width = layout.width;\n      var routes = navigationState.routes;\n      var maxTranslate = width * (routes.length - 1);\n      var translateX = Animated.add(panX, offsetX).interpolate({\n        inputRange: [-maxTranslate, 0],\n        outputRange: [-maxTranslate, 0],\n        extrapolate: 'clamp'\n      });\n      return React.createElement(GestureHandler.PanGestureHandler, {\n        enabled: layout.width !== 0 && swipeEnabled !== false,\n        minDeltaX: 10,\n        onGestureEvent: Animated.event([{\n          nativeEvent: {\n            translationX: this.props.panX\n          }\n        }], {\n          useNativeDriver: this.props.useNativeDriver\n        }),\n        onHandlerStateChange: this._handleHandlerStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.sheet, width ? {\n          width: routes.length * width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, React.Children.map(children, function (child, i) {\n        return React.createElement(View, {\n          key: navigationState.routes[i].key,\n          testID: navigationState.routes[i].testID,\n          style: width ? {\n            width: width\n          } : i === navigationState.index ? StyleSheet.absoluteFill : null,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }\n        }, i === navigationState.index || width ? child : null);\n      })));\n    }\n  }]);\n\n  return TabViewPagerExperimental;\n}(React.Component);\n\nTabViewPagerExperimental.propTypes = _objectSpread(_objectSpread({}, PagerRendererPropType), {}, {\n  swipeDistanceThreshold: PropTypes.number,\n  swipeVelocityThreshold: PropTypes.number,\n  GestureHandler: PropTypes.object\n});\nTabViewPagerExperimental.defaultProps = {\n  GestureHandler: global.__expo && global.__expo.DangerZone ? global.__expo.DangerZone.GestureHandler : undefined,\n  canJumpToTab: function canJumpToTab() {\n    return true;\n  }\n};\nexport { TabViewPagerExperimental as default };\nvar styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"sources":["/home/roroblacc/Desktop/App Project/client/node_modules/react-native-tab-view/src/TabViewPagerExperimental.js"],"names":["React","PropTypes","PagerRendererPropType","DefaultTransitionSpec","timing","Animated","spring","tension","friction","TabViewPagerExperimental","_handleHandlerStateChange","event","GestureHandler","props","nativeEvent","state","State","END","navigationState","layout","swipeDistanceThreshold","width","swipeVelocityThreshold","translationX","translationY","velocityX","velocityY","currentIndex","_pendingIndex","index","nextIndex","Math","abs","round","min","max","routes","length","isFinite","canJumpToTab","_transitionTo","velocity","offset","animationEnabled","panX","setValue","offsetX","transitionConfig","useNativeDriver","parallel","toValue","start","finished","jumpToIndex","prevProps","swipeEnabled","children","maxTranslate","translateX","add","interpolate","inputRange","outputRange","extrapolate","styles","sheet","transform","Children","map","child","i","key","testID","StyleSheet","absoluteFill","Component","propTypes","number","object","defaultProps","global","__expo","DangerZone","undefined","create","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { PagerRendererPropType } from './TabViewPropTypes';\nimport type { PagerRendererProps } from './TabViewTypeDefinitions';\n\ntype Props<T> = PagerRendererProps<T> & {\n  swipeDistanceThreshold?: number,\n  swipeVelocityThreshold?: number,\n  GestureHandler: any,\n};\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  tension: 75,\n  friction: 25,\n};\n\nexport default class TabViewPagerExperimental<T: *> extends React.Component<\n  Props<T>\n> {\n  static propTypes = {\n    ...PagerRendererPropType,\n    swipeDistanceThreshold: PropTypes.number,\n    swipeVelocityThreshold: PropTypes.number,\n    GestureHandler: PropTypes.object,\n  };\n\n  static defaultProps = {\n    GestureHandler:\n      global.__expo && global.__expo.DangerZone\n        ? global.__expo.DangerZone.GestureHandler\n        : undefined,\n    canJumpToTab: () => true,\n  };\n\n  componentDidUpdate(prevProps: Props<T>) {\n    if (prevProps.navigationState.index !== this.props.navigationState.index) {\n      this._transitionTo(this.props.navigationState.index);\n    }\n  }\n\n  _handleHandlerStateChange = event => {\n    const { GestureHandler } = this.props;\n\n    if (event.nativeEvent.state === GestureHandler.State.END) {\n      const {\n        navigationState,\n        layout,\n        swipeDistanceThreshold = layout.width / 1.75,\n        swipeVelocityThreshold = 150,\n      } = this.props;\n      const {\n        translationX,\n        translationY,\n        velocityX,\n        velocityY,\n      } = event.nativeEvent;\n      const currentIndex =\n        typeof this._pendingIndex === 'number'\n          ? this._pendingIndex\n          : navigationState.index;\n\n      let nextIndex = currentIndex;\n\n      if (\n        Math.abs(translationX) > Math.abs(translationY) &&\n        Math.abs(velocityX) > Math.abs(velocityY) &&\n        (Math.abs(translationX) > swipeDistanceThreshold ||\n          Math.abs(velocityX) > swipeVelocityThreshold)\n      ) {\n        nextIndex = Math.round(\n          Math.min(\n            Math.max(0, currentIndex - translationX / Math.abs(translationX)),\n            navigationState.routes.length - 1\n          )\n        );\n      }\n\n      if (\n        !isFinite(nextIndex) ||\n        !this.props.canJumpToTab(this.props.navigationState.routes[nextIndex])\n      ) {\n        nextIndex = currentIndex;\n      }\n\n      this._transitionTo(nextIndex, velocityX);\n    }\n  };\n\n  _transitionTo = (index: number, velocity?: number) => {\n    const offset = -index * this.props.layout.width;\n\n    if (this.props.animationEnabled === false) {\n      this.props.panX.setValue(0);\n      this.props.offsetX.setValue(offset);\n      return;\n    }\n\n    const { timing, ...transitionConfig } = DefaultTransitionSpec;\n    const { useNativeDriver } = this.props;\n\n    Animated.parallel([\n      timing(this.props.panX, {\n        ...transitionConfig,\n        toValue: 0,\n        velocity,\n        useNativeDriver,\n      }),\n      timing(this.props.offsetX, {\n        ...transitionConfig,\n        toValue: offset,\n        velocity,\n        useNativeDriver,\n      }),\n    ]).start(({ finished }) => {\n      if (finished) {\n        this.props.jumpToIndex(index);\n        this._pendingIndex = null;\n      }\n    });\n\n    this._pendingIndex = index;\n  };\n\n  _pendingIndex: ?number;\n\n  render() {\n    const {\n      GestureHandler,\n      panX,\n      offsetX,\n      layout,\n      navigationState,\n      swipeEnabled,\n      children,\n    } = this.props;\n    const { width } = layout;\n    const { routes } = navigationState;\n    const maxTranslate = width * (routes.length - 1);\n    const translateX = Animated.add(panX, offsetX).interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <GestureHandler.PanGestureHandler\n        enabled={layout.width !== 0 && swipeEnabled !== false}\n        minDeltaX={10}\n        onGestureEvent={Animated.event(\n          [{ nativeEvent: { translationX: this.props.panX } }],\n          { useNativeDriver: this.props.useNativeDriver }\n        )}\n        onHandlerStateChange={this._handleHandlerStateChange}\n      >\n        <Animated.View\n          style={[\n            styles.sheet,\n            width\n              ? { width: routes.length * width, transform: [{ translateX }] }\n              : null,\n          ]}\n        >\n          {React.Children.map(children, (child, i) => (\n            <View\n              key={navigationState.routes[i].key}\n              testID={navigationState.routes[i].testID}\n              style={\n                width\n                  ? { width }\n                  : i === navigationState.index ? StyleSheet.absoluteFill : null\n              }\n            >\n              {i === navigationState.index || width ? child : null}\n            </View>\n          ))}\n        </Animated.View>\n      </GestureHandler.PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}