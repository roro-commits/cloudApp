{"ast":null,"code":"\"use strict\";\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/roroblacc/Desktop/App Project/client/node_modules/react-native-timeline-flatlist/lib/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nvar defaultCircleSize = 16;\nvar defaultCircleColor = \"#007AFF\";\nvar defaultLineWidth = 2;\nvar defaultLineColor = \"#007AFF\";\nvar defaultTimeTextColor = \"black\";\nvar defaultDotColor = \"white\";\nvar defaultInnerCircle = \"none\";\nvar isRtl = I18nManager.isRTL;\n\nvar Timeline = function (_PureComponent) {\n  _inherits(Timeline, _PureComponent);\n\n  var _super = _createSuper(Timeline);\n\n  function Timeline(props, context) {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _super.call(this, props, context);\n    _this._renderItem = _this._renderItem.bind(_assertThisInitialized(_this));\n    _this.renderTime = (_this.props.renderTime ? _this.props.renderTime : _this._renderTime).bind(_assertThisInitialized(_this));\n    _this.renderDetail = (_this.props.renderDetail ? _this.props.renderDetail : _this._renderDetail).bind(_assertThisInitialized(_this));\n    _this.renderCircle = (_this.props.renderCircle ? _this.props.renderCircle : _this._renderCircle).bind(_assertThisInitialized(_this));\n    _this.renderEvent = _this._renderEvent.bind(_assertThisInitialized(_this));\n    _this.state = {\n      data: _this.props.data,\n      x: 0,\n      width: 0\n    };\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [styles.container, this.props.style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, _extends({\n        style: [styles.listview, this.props.listViewStyle],\n        contentContainerStyle: this.props.listViewContainerStyle,\n        data: this.state.data,\n        extraData: this.state,\n        renderItem: this._renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index + \"\";\n        }\n      }, this.props.options, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var content = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          content = React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }\n          }, this.renderTime(item, index), this.renderEvent(item, index), this.renderCircle(item, index));\n          break;\n\n        case \"single-column-right\":\n          content = React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, this.renderEvent(item, index), this.renderTime(item, index), this.renderCircle(item, index));\n          break;\n\n        case \"two-column\":\n          content = item.position && item.position == \"right\" || !item.position && index % 2 == 0 ? React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }\n          }, this.renderTime(item, index), this.renderEvent(item, index), this.renderCircle(item, index)) : React.createElement(View, {\n            style: [styles.rowContainer, this.props.rowContainerStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }\n          }, this.renderEvent(item, index), this.renderTime(item, index), this.renderCircle(item, index));\n          break;\n      }\n\n      return React.createElement(View, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 12\n        }\n      }, content);\n    }\n  }, {\n    key: \"_renderTime\",\n    value: function _renderTime(rowData, rowID) {\n      if (!this.props.showTime) {\n        return null;\n      }\n\n      var timeWrapper = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          timeWrapper = {\n            alignItems: \"flex-end\"\n          };\n          break;\n\n        case \"single-column-right\":\n          timeWrapper = {\n            alignItems: \"flex-start\"\n          };\n          break;\n\n        case \"two-column\":\n          timeWrapper = {\n            flex: 1,\n            alignItems: rowData.position && rowData.position == \"right\" || !rowData.position && rowID % 2 == 0 ? \"flex-end\" : \"flex-start\"\n          };\n          break;\n      }\n\n      var isAllowFontScaling = this.props.isAllowFontScaling;\n      return React.createElement(View, {\n        style: timeWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.timeContainer, this.props.timeContainerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.time, this.props.timeStyle],\n        allowFontScaling: isAllowFontScaling,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, rowData.time)));\n    }\n  }, {\n    key: \"_renderEvent\",\n    value: function _renderEvent(rowData, rowID) {\n      var _this2 = this;\n\n      var lineWidth = rowData.lineWidth ? rowData.lineWidth : this.props.lineWidth;\n      var isLast = this.props.renderFullLine ? !this.props.renderFullLine : this.state.data.slice(-1)[0] === rowData;\n      var lineColor = isLast ? \"rgba(0,0,0,0)\" : rowData.lineColor ? rowData.lineColor : this.props.lineColor;\n      var opStyle = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          opStyle = {\n            borderColor: lineColor,\n            borderLeftWidth: lineWidth,\n            borderRightWidth: 0,\n            marginLeft: 20,\n            paddingLeft: 20\n          };\n          break;\n\n        case \"single-column-right\":\n          opStyle = {\n            borderColor: lineColor,\n            borderLeftWidth: 0,\n            borderRightWidth: lineWidth,\n            marginRight: 20,\n            paddingRight: 20\n          };\n          break;\n\n        case \"two-column\":\n          opStyle = rowData.position && rowData.position == \"right\" || !rowData.position && rowID % 2 == 0 ? {\n            borderColor: lineColor,\n            borderLeftWidth: lineWidth,\n            borderRightWidth: 0,\n            marginLeft: 20,\n            paddingLeft: 20\n          } : {\n            borderColor: lineColor,\n            borderLeftWidth: 0,\n            borderRightWidth: lineWidth,\n            marginRight: 20,\n            paddingRight: 20\n          };\n          break;\n      }\n\n      return React.createElement(View, {\n        style: [styles.details, opStyle, this.props.eventContainerStyle, rowData.eventContainerStyle],\n        onLayout: function onLayout(evt) {\n          if (!_this2.state.x && !_this2.state.width) {\n            var _evt$nativeEvent$layo = evt.nativeEvent.layout,\n                x = _evt$nativeEvent$layo.x,\n                width = _evt$nativeEvent$layo.width;\n\n            _this2.setState({\n              x: x,\n              width: width\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: this.props.onEventPress == null,\n        style: [this.props.detailContainerStyle],\n        onPress: function onPress() {\n          return _this2.props.onEventPress ? _this2.props.onEventPress(rowData) : null;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.detail, this.props.eventDetailStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, this.renderDetail(rowData, rowID)), this._renderSeparator()));\n    }\n  }, {\n    key: \"_renderDetail\",\n    value: function _renderDetail(rowData, rowID) {\n      var isAllowFontScaling = this.props.isAllowFontScaling;\n      var description;\n\n      if (typeof rowData.description === \"string\") {\n        description = React.createElement(Text, {\n          style: [styles.description, this.props.descriptionStyle, rowData.descriptionStyle],\n          allowFontScaling: isAllowFontScaling,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 9\n          }\n        }, rowData.description);\n      } else if (typeof rowData.description === \"object\") {\n        description = rowData.description;\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, this.props.titleStyle, rowData.titleStyle],\n        allowFontScaling: isAllowFontScaling,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, rowData.title), description);\n    }\n  }, {\n    key: \"_renderCircle\",\n    value: function _renderCircle(rowData, rowID) {\n      var circleSize = rowData.circleSize ? rowData.circleSize : this.props.circleSize ? this.props.circleSize : defaultCircleSize;\n      var circleColor = rowData.circleColor ? rowData.circleColor : this.props.circleColor ? this.props.circleColor : defaultCircleColor;\n      var lineWidth = rowData.lineWidth ? rowData.lineWidth : this.props.lineWidth ? this.props.lineWidth : defaultLineWidth;\n      var circleStyle = null;\n\n      switch (this.props.columnFormat) {\n        case \"single-column-left\":\n          circleStyle = isRtl ? {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            right: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          } : {\n            width: this.state.x ? circleSize : 0,\n            height: this.state.x ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.x - circleSize / 2 + (lineWidth - 1) / 2\n          };\n          break;\n\n        case \"single-column-right\":\n          circleStyle = {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          };\n          break;\n\n        case \"two-column\":\n          circleStyle = {\n            width: this.state.width ? circleSize : 0,\n            height: this.state.width ? circleSize : 0,\n            borderRadius: circleSize / 2,\n            backgroundColor: circleColor,\n            left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n          };\n          break;\n      }\n\n      var innerCircle = null;\n\n      switch (this.props.innerCircle) {\n        case \"icon\":\n          var iconDefault = rowData.iconDefault ? rowData.iconDefault : this.props.iconDefault;\n          var iconSource = rowData.icon ? rowData.icon : iconDefault;\n\n          if (React.isValidElement(iconSource)) {\n            innerCircle = iconSource;\n            break;\n          }\n\n          if (rowData.icon) iconSource = rowData.icon.constructor === String ? {\n            uri: rowData.icon\n          } : rowData.icon;\n          var iconStyle = {\n            height: circleSize,\n            width: circleSize\n          };\n          innerCircle = React.createElement(Image, {\n            source: iconSource,\n            defaultSource: typeof iconDefault === \"number\" && iconDefault,\n            style: [iconStyle, this.props.iconStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case \"dot\":\n          var dotSize = this.props.dotSize ? this.props.dotSize : circleSize / 2;\n          var dotStyle = {\n            height: dotSize,\n            width: dotSize,\n            borderRadius: circleSize / 4,\n            backgroundColor: rowData.dotColor ? rowData.dotColor : this.props.dotColor ? this.props.dotColor : defaultDotColor\n          };\n          innerCircle = React.createElement(View, {\n            style: [styles.dot, dotStyle],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 23\n            }\n          });\n          break;\n\n        case \"element\":\n          innerCircle = rowData.icon;\n          break;\n      }\n\n      return React.createElement(View, {\n        style: [styles.circle, circleStyle, this.props.circleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 7\n        }\n      }, innerCircle);\n    }\n  }, {\n    key: \"_renderSeparator\",\n    value: function _renderSeparator() {\n      if (!this.props.separator) {\n        return null;\n      }\n\n      return React.createElement(View, {\n        style: [styles.separator, this.props.separatorStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 12\n        }\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (prevState.data !== nextProps.data) {\n        return {\n          data: nextProps.data\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Timeline;\n}(PureComponent);\n\nexport { Timeline as default };\nTimeline.defaultProps = {\n  circleSize: defaultCircleSize,\n  circleColor: defaultCircleColor,\n  lineWidth: defaultLineWidth,\n  lineColor: defaultLineColor,\n  innerCircle: defaultInnerCircle,\n  columnFormat: \"single-column-left\",\n  separator: false,\n  showTime: true,\n  isAllowFontScaling: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  listview: {\n    flex: 1\n  },\n  sectionHeader: {\n    marginBottom: 15,\n    backgroundColor: \"#007AFF\",\n    height: 30,\n    justifyContent: \"center\"\n  },\n  sectionHeaderText: {\n    color: \"#FFF\",\n    fontSize: 18,\n    alignSelf: \"center\"\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  timeContainer: {\n    minWidth: 45\n  },\n  time: {\n    textAlign: \"right\",\n    color: defaultTimeTextColor,\n    overflow: \"hidden\"\n  },\n  circle: {\n    width: 16,\n    height: 16,\n    borderRadius: 10,\n    zIndex: 1,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: defaultDotColor\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  details: {\n    borderLeftWidth: defaultLineWidth,\n    flexDirection: \"column\",\n    flex: 1\n  },\n  detail: {\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  description: {\n    marginTop: 10\n  },\n  separator: {\n    height: 1,\n    backgroundColor: \"#aaa\",\n    marginTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/home/roroblacc/Desktop/App Project/client/node_modules/react-native-timeline-flatlist/lib/index.js"],"names":["React","PureComponent","defaultCircleSize","defaultCircleColor","defaultLineWidth","defaultLineColor","defaultTimeTextColor","defaultDotColor","defaultInnerCircle","isRtl","I18nManager","isRTL","Timeline","props","context","_renderItem","bind","renderTime","_renderTime","renderDetail","_renderDetail","renderCircle","_renderCircle","renderEvent","_renderEvent","state","data","x","width","styles","container","style","listview","listViewStyle","listViewContainerStyle","item","index","options","content","columnFormat","rowContainer","rowContainerStyle","position","rowData","rowID","showTime","timeWrapper","alignItems","flex","isAllowFontScaling","timeContainer","timeContainerStyle","time","timeStyle","lineWidth","isLast","renderFullLine","slice","lineColor","opStyle","borderColor","borderLeftWidth","borderRightWidth","marginLeft","paddingLeft","marginRight","paddingRight","details","eventContainerStyle","evt","nativeEvent","layout","setState","onEventPress","detailContainerStyle","detail","eventDetailStyle","_renderSeparator","description","descriptionStyle","title","titleStyle","circleSize","circleColor","circleStyle","height","borderRadius","backgroundColor","right","left","innerCircle","iconDefault","iconSource","icon","isValidElement","constructor","String","uri","iconStyle","dotSize","dotStyle","dotColor","dot","circle","separator","separatorStyle","nextProps","prevState","defaultProps","StyleSheet","create","sectionHeader","marginBottom","justifyContent","sectionHeaderText","color","fontSize","alignSelf","flexDirection","minWidth","textAlign","overflow","zIndex","fontWeight","paddingTop","paddingBottom","marginTop"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { PureComponent } from \"react\";\nimport {\n  StyleSheet,\n  FlatList,\n  Image,\n  View,\n  Text,\n  TouchableOpacity,\n  I18nManager\n} from \"react-native\";\n\nconst defaultCircleSize = 16;\nconst defaultCircleColor = \"#007AFF\";\nconst defaultLineWidth = 2;\nconst defaultLineColor = \"#007AFF\";\nconst defaultTimeTextColor = \"black\";\nconst defaultDotColor = \"white\";\nconst defaultInnerCircle = \"none\";\nconst isRtl = I18nManager.isRTL;\n\nexport default class Timeline extends PureComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this._renderItem = this._renderItem.bind(this);\n    this.renderTime = (this.props.renderTime\n      ? this.props.renderTime\n      : this._renderTime\n    ).bind(this);\n    this.renderDetail = (this.props.renderDetail\n      ? this.props.renderDetail\n      : this._renderDetail\n    ).bind(this);\n    this.renderCircle = (this.props.renderCircle\n      ? this.props.renderCircle\n      : this._renderCircle\n    ).bind(this);\n    this.renderEvent = this._renderEvent.bind(this);\n\n    this.state = {\n      data: this.props.data,\n      x: 0,\n      width: 0\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.data !== nextProps.data) {\n      return {\n        data: nextProps.data\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <View style={[styles.container, this.props.style]}>\n        <FlatList\n          style={[styles.listview, this.props.listViewStyle]}\n          contentContainerStyle={this.props.listViewContainerStyle}\n          data={this.state.data}\n          extraData={this.state}\n          renderItem={this._renderItem}\n          keyExtractor={(item, index) => index + \"\"}\n          {...this.props.options}\n        />\n      </View>\n    );\n  }\n\n  _renderItem({ item, index }) {\n    let content = null;\n    switch (this.props.columnFormat) {\n      case \"single-column-left\":\n        content = (\n          <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n            {this.renderTime(item, index)}\n            {this.renderEvent(item, index)}\n            {this.renderCircle(item, index)}\n          </View>\n        );\n        break;\n      case \"single-column-right\":\n        content = (\n          <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n            {this.renderEvent(item, index)}\n            {this.renderTime(item, index)}\n            {this.renderCircle(item, index)}\n          </View>\n        );\n        break;\n      case \"two-column\":\n        content =\n          (item.position && item.position == \"right\") ||\n          (!item.position && index % 2 == 0) ? (\n            <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n              {this.renderTime(item, index)}\n              {this.renderEvent(item, index)}\n              {this.renderCircle(item, index)}\n            </View>\n          ) : (\n            <View style={[styles.rowContainer, this.props.rowContainerStyle]}>\n              {this.renderEvent(item, index)}\n              {this.renderTime(item, index)}\n              {this.renderCircle(item, index)}\n            </View>\n          );\n        break;\n    }\n    return <View key={index}>{content}</View>;\n  }\n\n  _renderTime(rowData, rowID) {\n    if (!this.props.showTime) {\n      return null;\n    }\n    var timeWrapper = null;\n    switch (this.props.columnFormat) {\n      case \"single-column-left\":\n        timeWrapper = {\n          alignItems: \"flex-end\"\n        };\n        break;\n      case \"single-column-right\":\n        timeWrapper = {\n          alignItems: \"flex-start\"\n        };\n        break;\n      case \"two-column\":\n        timeWrapper = {\n          flex: 1,\n          alignItems:\n            (rowData.position && rowData.position == \"right\") ||\n            (!rowData.position && rowID % 2 == 0)\n              ? \"flex-end\"\n              : \"flex-start\"\n        };\n        break;\n    }\n    const { isAllowFontScaling } = this.props;\n    return (\n      <View style={timeWrapper}>\n        <View style={[styles.timeContainer, this.props.timeContainerStyle]}>\n          <Text\n            style={[styles.time, this.props.timeStyle]}\n            allowFontScaling={isAllowFontScaling}\n          >\n            {rowData.time}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  _renderEvent(rowData, rowID) {\n    const lineWidth = rowData.lineWidth\n      ? rowData.lineWidth\n      : this.props.lineWidth;\n    const isLast = this.props.renderFullLine\n      ? !this.props.renderFullLine\n      : this.state.data.slice(-1)[0] === rowData;\n    const lineColor = isLast\n      ? \"rgba(0,0,0,0)\"\n      : rowData.lineColor\n      ? rowData.lineColor\n      : this.props.lineColor;\n    let opStyle = null;\n\n    switch (this.props.columnFormat) {\n      case \"single-column-left\":\n        opStyle = {\n          borderColor: lineColor,\n          borderLeftWidth: lineWidth,\n          borderRightWidth: 0,\n          marginLeft: 20,\n          paddingLeft: 20\n        };\n        break;\n      case \"single-column-right\":\n        opStyle = {\n          borderColor: lineColor,\n          borderLeftWidth: 0,\n          borderRightWidth: lineWidth,\n          marginRight: 20,\n          paddingRight: 20\n        };\n        break;\n      case \"two-column\":\n        opStyle =\n          (rowData.position && rowData.position == \"right\") ||\n          (!rowData.position && rowID % 2 == 0)\n            ? {\n                borderColor: lineColor,\n                borderLeftWidth: lineWidth,\n                borderRightWidth: 0,\n                marginLeft: 20,\n                paddingLeft: 20\n              }\n            : {\n                borderColor: lineColor,\n                borderLeftWidth: 0,\n                borderRightWidth: lineWidth,\n                marginRight: 20,\n                paddingRight: 20\n              };\n        break;\n    }\n\n    return (\n      <View\n        style={[\n          styles.details,\n          opStyle,\n          this.props.eventContainerStyle,\n          rowData.eventContainerStyle\n        ]}\n        onLayout={evt => {\n          if (!this.state.x && !this.state.width) {\n            const { x, width } = evt.nativeEvent.layout;\n            this.setState({ x, width });\n          }\n        }}\n      >\n        <TouchableOpacity\n          disabled={this.props.onEventPress == null}\n          style={[this.props.detailContainerStyle]}\n          onPress={() =>\n            this.props.onEventPress ? this.props.onEventPress(rowData) : null\n          }\n        >\n          <View style={[styles.detail, this.props.eventDetailStyle]}>\n            {this.renderDetail(rowData, rowID)}\n          </View>\n          {this._renderSeparator()}\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  _renderDetail(rowData, rowID) {\n    const { isAllowFontScaling } = this.props;\n    let description;\n    if (typeof rowData.description === \"string\") {\n      description = (\n        <Text\n          style={[\n            styles.description,\n            this.props.descriptionStyle,\n            rowData.descriptionStyle\n          ]}\n          allowFontScaling={isAllowFontScaling}\n        >\n          {rowData.description}\n        </Text>\n      );\n    } else if (typeof rowData.description === \"object\") {\n      description = rowData.description;\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text\n          style={[styles.title, this.props.titleStyle, rowData.titleStyle]}\n          allowFontScaling={isAllowFontScaling}\n        >\n          {rowData.title}\n        </Text>\n        {description}\n      </View>\n    );\n  }\n\n  _renderCircle(rowData, rowID) {\n    var circleSize = rowData.circleSize\n      ? rowData.circleSize\n      : this.props.circleSize\n      ? this.props.circleSize\n      : defaultCircleSize;\n    var circleColor = rowData.circleColor\n      ? rowData.circleColor\n      : this.props.circleColor\n      ? this.props.circleColor\n      : defaultCircleColor;\n    var lineWidth = rowData.lineWidth\n      ? rowData.lineWidth\n      : this.props.lineWidth\n      ? this.props.lineWidth\n      : defaultLineWidth;\n\n    var circleStyle = null;\n\n    switch (this.props.columnFormat) {\n      case \"single-column-left\":\n        circleStyle = isRtl\n          ? {\n              width: this.state.width ? circleSize : 0,\n              height: this.state.width ? circleSize : 0,\n              borderRadius: circleSize / 2,\n              backgroundColor: circleColor,\n              right: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n            }\n          : {\n              width: this.state.x ? circleSize : 0,\n              height: this.state.x ? circleSize : 0,\n              borderRadius: circleSize / 2,\n              backgroundColor: circleColor,\n              left: this.state.x - circleSize / 2 + (lineWidth - 1) / 2\n            };\n        break;\n      case \"single-column-right\":\n        circleStyle = {\n          width: this.state.width ? circleSize : 0,\n          height: this.state.width ? circleSize : 0,\n          borderRadius: circleSize / 2,\n          backgroundColor: circleColor,\n          left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n        };\n        break;\n      case \"two-column\":\n        circleStyle = {\n          width: this.state.width ? circleSize : 0,\n          height: this.state.width ? circleSize : 0,\n          borderRadius: circleSize / 2,\n          backgroundColor: circleColor,\n          left: this.state.width - circleSize / 2 - (lineWidth - 1) / 2\n        };\n        break;\n    }\n\n    var innerCircle = null;\n    switch (this.props.innerCircle) {\n      case \"icon\":\n        let iconDefault = rowData.iconDefault\n          ? rowData.iconDefault\n          : this.props.iconDefault;\n        let iconSource = rowData.icon ? rowData.icon : iconDefault;\n        if (React.isValidElement(iconSource)) {\n          innerCircle = iconSource;\n          break;\n        }\n        if (rowData.icon)\n          iconSource =\n            rowData.icon.constructor === String\n              ? { uri: rowData.icon }\n              : rowData.icon;\n        let iconStyle = {\n          height: circleSize,\n          width: circleSize\n        };\n        innerCircle = (\n          <Image\n            source={iconSource}\n            defaultSource={typeof iconDefault === \"number\" && iconDefault}\n            style={[iconStyle, this.props.iconStyle]}\n          />\n        );\n        break;\n      case \"dot\":\n        const dotSize = this.props.dotSize\n          ? this.props.dotSize\n          : circleSize / 2;\n        let dotStyle = {\n          height: dotSize,\n          width: dotSize,\n          borderRadius: circleSize / 4,\n          backgroundColor: rowData.dotColor\n            ? rowData.dotColor\n            : this.props.dotColor\n            ? this.props.dotColor\n            : defaultDotColor\n        };\n        innerCircle = <View style={[styles.dot, dotStyle]} />;\n        break;\n      case \"element\":\n        innerCircle = rowData.icon;\n        break;\n    }\n    return (\n      <View style={[styles.circle, circleStyle, this.props.circleStyle]}>\n        {innerCircle}\n      </View>\n    );\n  }\n\n  _renderSeparator() {\n    if (!this.props.separator) {\n      return null;\n    }\n    return <View style={[styles.separator, this.props.separatorStyle]} />;\n  }\n}\n\nTimeline.defaultProps = {\n  circleSize: defaultCircleSize,\n  circleColor: defaultCircleColor,\n  lineWidth: defaultLineWidth,\n  lineColor: defaultLineColor,\n  innerCircle: defaultInnerCircle,\n  columnFormat: \"single-column-left\",\n  separator: false,\n  showTime: true,\n  isAllowFontScaling: true\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  listview: {\n    flex: 1\n  },\n  sectionHeader: {\n    marginBottom: 15,\n    backgroundColor: \"#007AFF\",\n    height: 30,\n    justifyContent: \"center\"\n  },\n  sectionHeaderText: {\n    color: \"#FFF\",\n    fontSize: 18,\n    alignSelf: \"center\"\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  timeContainer: {\n    minWidth: 45\n  },\n  time: {\n    textAlign: \"right\",\n    color: defaultTimeTextColor,\n    overflow: \"hidden\"\n  },\n  circle: {\n    width: 16,\n    height: 16,\n    borderRadius: 10,\n    zIndex: 1,\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  dot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: defaultDotColor\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  details: {\n    borderLeftWidth: defaultLineWidth,\n    flexDirection: \"column\",\n    flex: 1\n  },\n  detail: { paddingTop: 10, paddingBottom: 10 },\n  description: {\n    marginTop: 10\n  },\n  separator: {\n    height: 1,\n    backgroundColor: \"#aaa\",\n    marginTop: 10,\n    marginBottom: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}