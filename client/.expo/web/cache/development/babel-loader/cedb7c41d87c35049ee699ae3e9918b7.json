{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/roroblacc/Desktop/Presentation/cloudApp/client/myComponents/Timer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nimport StartButton from \"./startButton\";\nimport { ToggleButton, DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport moment from 'moment';\nimport axios from 'axios';\nvar values = 10;\nvar job = 'cloudOS';\n\nvar children = function children(_ref) {\n  var remainingTime = _ref.remainingTime;\n  var hours = Math.floor(remainingTime / 3600);\n  var minutes = Math.floor(remainingTime % 3600 / 60);\n  var seconds = remainingTime % 60;\n  return hours + \":\" + minutes + \":\" + seconds;\n};\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: '#3498db',\n    accent: '#dbc834'\n  })\n});\n\nvar SetTimer = function SetTimer() {\n  var _React$useState = React.useState(10),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState('cloudOS'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedLanguage = _React$useState4[0],\n      setSelectedLanguage = _React$useState4[1];\n\n  return React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, \" Pick Time \"), React.createElement(Text, {\n    style: styles.text2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, \" 10sec | 1min| 5min| 50min \"), React.createElement(ToggleButton.Row, {\n    style: styles.color,\n    onValueChange: function onValueChange(value) {\n      return setValue(value);\n    },\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"timer-10\",\n    onPress: function onPress() {\n      values = 10;\n    },\n    value: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"clock-time-six\",\n    onPress: function onPress() {\n      values = 60;\n    },\n    value: \"1 min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"timelapse\",\n    onPress: function onPress() {\n      values = 300;\n    },\n    value: \"5 min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"clock-time-twelve-outline\",\n    onPress: function onPress() {\n      values = 3000;\n    },\n    value: \"50 min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \" Select Subject \"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, React.createElement(ToggleButton.Row, {\n    style: styles.color,\n    size: 80,\n    onValueChange: function onValueChange(selectedLanguage) {\n      return setSelectedLanguage(selectedLanguage);\n    },\n    value: selectedLanguage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"cloud-check\",\n    onPress: function onPress() {\n      job = 'cloudOS Computing';\n    },\n    value: \"cloudOS\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"code-json\",\n    onPress: function onPress() {\n      job = 'C++ Programing';\n    },\n    value: \"C++\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"math-integral-box\",\n    onPress: function onPress() {\n      job = 'Mathematics';\n    },\n    value: \"Math\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), React.createElement(ToggleButton, {\n    size: 40,\n    icon: \"cannabis\",\n    onPress: function onPress() {\n      job = 'Recreation';\n    },\n    value: \"plus\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar TImer = function (_React$Component) {\n  _inherits(TImer, _React$Component);\n\n  var _super = _createSuper(TImer);\n\n  function TImer(props) {\n    var _this2;\n\n    _classCallCheck(this, TImer);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      start: false,\n      time: 10,\n      done: false,\n      key: 0\n    };\n\n    _this2.onselectstart = function () {\n      _this2.setState({\n        time: values\n      });\n\n      console.log(\"pressed\");\n\n      _this2.setState({\n        start: true\n      });\n\n      _this2.setState({\n        done: true\n      });\n    };\n\n    _this2.onReset = function () {\n      console.log(_this2.state.done);\n\n      _this2.setState({\n        key: _this2.state.key + 1\n      });\n\n      _this2.setState({\n        time: values\n      });\n    };\n\n    _this2.getTime = function () {\n      console.log(\"testing\");\n      console.log(job);\n    };\n\n    _this2.submit = function (event) {\n      var data = job;\n      var val = values;\n      var description = '';\n      var dotColor = '';\n      var date = moment().utcOffset('+1').format('hh:mm a');\n\n      if (job === 'cloudOS Computing') {\n        description = ' Studying Cloud Computing .....';\n        dotColor = 'green';\n      }\n\n      if (job === 'C++ Programing') {\n        description = ' Programming in C++, Programmer rule the world .....';\n        dotColor = 'red';\n      }\n\n      if (job === 'Mathematics') {\n        description = 'In real life, I assure you, there is no such thing as algebra';\n        dotColor = 'brown';\n      }\n\n      if (job === 'Recreation') {\n        description = 'Herb is the healing of a nation, alcohol is the destruction.  â€”Bob Marley ';\n        dotColor = 'brown';\n      }\n\n      var payload = {\n        title: job,\n        time: date,\n        description: description,\n        dotColor: dotColor\n      };\n      axios({\n        url: 'http://localhost:8082/api/save',\n        method: 'POST',\n        data: payload\n      }).then(function () {\n        console.log(\"File has been sent to the server \");\n      }).catch(function () {\n        console.log(\"internal Server Error\");\n      });\n      ;\n    };\n\n    return _this2;\n  }\n\n  _createClass(TImer, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, React.createElement(CountdownCircleTimer, {\n        key: this.state.key,\n        isPlaying: this.state.start.valueOf(),\n        duration: this.state.time,\n        colors: [['#004777', 0.4], ['#F7B801', 0.4], ['#A30000', 0.2]],\n        size: 250,\n        ariaLabel: \"keep going!!\",\n        onComplete: (function () {\n          _this3.state.done = true;\n        }, this.submit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }\n      }, function (_ref2) {\n        var remainingTime = _ref2.remainingTime,\n            animatedColor = _ref2.animatedColor;\n        return React.createElement(Animated.Text, {\n          style: ({\n            color: animatedColor\n          }, styles.remainingTime),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }\n        }, children({\n          remainingTime: remainingTime\n        }));\n      }), React.createElement(View, {\n        style: styles.startButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, React.createElement(StartButton, {\n        props: this.state.done === false ? this.onselectstart : this.onReset,\n        text: this.state.done === false ? 'Start Timer !!!' : \"Restart!!!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      })))));\n    }\n  }]);\n\n  return TImer;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 8,\n    marginTop: 0\n  },\n  remainingTime: {\n    fontSize: 60\n  },\n  startButton: {\n    marginTop: 65\n  },\n  color: {},\n  text: {\n    marginBottom: 40,\n    marginTop: 40\n  },\n  text2: {\n    marginBottom: 40\n  },\n  view: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport { SetTimer, TImer };","map":{"version":3,"sources":["/home/roroblacc/Desktop/Presentation/cloudApp/client/myComponents/Timer.js"],"names":["React","CountdownCircleTimer","StartButton","ToggleButton","DefaultTheme","Provider","PaperProvider","moment","axios","values","job","children","remainingTime","hours","Math","floor","minutes","seconds","theme","roundness","colors","primary","accent","SetTimer","useState","value","setValue","selectedLanguage","setSelectedLanguage","styles","view","text","text2","color","TImer","props","state","start","time","done","key","onselectstart","setState","console","log","onReset","getTime","submit","event","data","val","description","dotColor","date","utcOffset","format","payload","title","url","method","then","catch","container","valueOf","animatedColor","startButton","Component","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","padding","marginTop","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Animated } from 'react-native';\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer'\nimport StartButton from './startButton'\nimport { ToggleButton,DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport moment from 'moment';\nimport axios from 'axios'\n\n\n\nlet values  = 10;\nlet job = 'cloudOS';\n\n\nconst children = ({ remainingTime }) => {\n    const hours = Math.floor(remainingTime / 3600)\n    const minutes = Math.floor((remainingTime % 3600) / 60)\n    const seconds = remainingTime % 60\n  \n    return `${hours}:${minutes}:${seconds}`\n  };\n\n  const theme = {\n    ...DefaultTheme,\n    roundness: 2,\n    colors: {\n      ...DefaultTheme.colors,\n      primary: '#3498db',\n      accent: '#dbc834',\n    },\n  };\n\n\n  // use to set the timer and  the subject by using group toggle \nconst SetTimer = () => {\n    const [value, setValue] = React.useState(10);\n    const [selectedLanguage, setSelectedLanguage] = React.useState('cloudOS');\n\n    return (\n      <React.Fragment>\n        <View  style={styles.view} >\n         <Text style ={styles.text}> Pick Time </Text>\n         <Text style ={styles.text2}> 10sec | 1min| 5min| 50min </Text>\n         \n            {/* //on onValueChange triggers a fucntion to set global time and subject value  */}\n        <ToggleButton.Row style={styles.color} onValueChange={value => setValue(value)} value={value}>\n            <ToggleButton size ={40} icon=\"timer-10\" onPress={() => {values = 10}} value={10} />\n            <ToggleButton size ={40} icon=\"clock-time-six\" onPress={() => {values = 60}} value=\"1 min\" />\n            <ToggleButton size ={40} icon=\"timelapse\" onPress={() => {values = 300}} value=\"5 min\" />\n            <ToggleButton size ={40} icon=\"clock-time-twelve-outline\" onPress={() => {values = 3000}} value=\"50 min\" />\n      </ToggleButton.Row>\n\n      <Text style ={styles.text}> Select Subject </Text>\n         <View  >\n         <ToggleButton.Row  style={styles.color} size={80} onValueChange={selectedLanguage => setSelectedLanguage(selectedLanguage)} value={selectedLanguage}>\n            <ToggleButton size ={40} icon=\"cloud-check\" onPress={() => {job = 'cloudOS Computing'}} value='cloudOS' />\n            <ToggleButton size ={40} icon=\"code-json\" onPress={() => {job = 'C++ Programing'}} value=\"C++\" />\n            <ToggleButton size ={40} icon=\"math-integral-box\" onPress={() => {job = 'Mathematics'}} value=\"Math\" />\n            <ToggleButton size ={40} icon=\"cannabis\" onPress={() => {job = 'Recreation'}} value=\"plus\" />\n      </ToggleButton.Row>\n      \n         </View>\n      </View>\n      </React.Fragment>\n     \n    );\n  };\n\n\n\n\nclass TImer extends React.Component {\n    constructor(props) {       \n        super(props);\n       \n                 //line 2\n        this.state = {     //line 3\n          start : false,\n          time: 10,\n          done:false ,\n          key:0,\n\n         \n       };\n       \n      \n\n       this.onselectstart = () =>{\n        this.setState({time: values})\n        console.log(\"pressed\");\n        this.setState({ start:true });\n        this.setState({ done:true });\n    }\n\n\n    // key is used to trigger the timer restart\n    this.onReset =() =>{\n        console.log(this.state.done);\n        this.setState({ key: this.state.key+1 });\n        this.setState({time: values})\n\n        // console.log(timeLineData.length)\n\n    }\n\n    this.getTime =() =>{\n\n      console.log(\"testing\")\n      console.log(job)\n      \n    }\n\n    // function for sending data to the data base \n\n    this.submit = (event) => {\n      // event.preventDefault();\n        let data = job\n        let val = values\n        let description =''\n        let dotColor = ''\n\n        //using  the momemt.js libarary to set the time data \n        var date = moment()\n        .utcOffset('+1')\n        .format('hh:mm a');\n\n        //creating Data Structure for tijme line before sending it \n        if (job === 'cloudOS Computing'){\n          description =' Studying Cloud Computing .....'\n          dotColor = 'green'\n         }\n         if (job === 'C++ Programing'){\n          description =' Programming in C++, Programmer rule the world .....'\n          dotColor = 'red'\n         }\n         if (job === 'Mathematics'){\n          description = 'In real life, I assure you, there is no such thing as algebra'\n          dotColor = 'brown'\n         }\n         if (job === 'Recreation'){\n          description = 'Herb is the healing of a nation, alcohol is the destruction.  â€”Bob Marley '\n          dotColor = 'brown'\n         }\n          \n    const payload = {\n        title: job,\n        time: date,\n        description: description,\n        dotColor: dotColor,\n    }\n\n      axios({\n          url: 'http://localhost:8082/api/save',\n          method:'POST',\n          data: payload,\n      })\n      .then (() =>{\n        console.log(\"File has been sent to the server \")\n      })\n      .catch(() =>{\n        console.log(\"internal Server Error\")\n      });;\n\n    }\n  }\n     \n       \n\n        \n\n       render(){\n           return(\n            <React.Fragment>\n                <View style={styles.container}>\n                    <CountdownCircleTimer\n                    //key triggers restart when it changes \n                    key={this.state.key}\n                    isPlaying={this.state.start.valueOf()}\n                    duration={this.state.time}\n                    colors={[\n                    ['#004777', 0.4],\n                    ['#F7B801', 0.4],\n                    ['#A30000', 0.2],\n                    ]}\n                    size = {250}\n                    // onComplete\t\n                    ariaLabel ={\"keep going!!\"}\n                    onComplete ={() => {this.state.done = true},this.submit}\n                    \n                    >\n                    {({ remainingTime, animatedColor }) => (\n                    <Animated.Text style={{ color: animatedColor }, styles.remainingTime}>\n                        {children({remainingTime})}\n                    </Animated.Text>\n                    )}\n            \n                    </CountdownCircleTimer>\n\n                    <View style={styles.startButton}>\n                    <React.Fragment>\n                      {/* tenary starts timeer or Restart Timer         and changes button text to start ot Restart */}\n                        <StartButton   props={this.state.done === false ? this.onselectstart : this.onReset} text={this.state.done === false ? 'Start Timer !!!': \"Restart!!!\"}  />\n                    </React.Fragment>\n                </View>\n                  \n                </View>\n            \n             \n            \n            </React.Fragment>\n\n           )\n       }\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      // paddingTop: Constants.statusBarHeight,\n      backgroundColor: 'white',\n      padding: 8,\n      marginTop:0\n    },\n    remainingTime: {\n      fontSize: 60,\n    },\n    startButton:{\n        marginTop:65\n\n    },\n    color:{\n      // backgroundColor:'blue'\n    },\n    text:{\n      marginBottom:40,\n      marginTop:40\n\n    },\n    text2:{\n      marginBottom:40\n    },\n    view:{\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n\nexport{\n  SetTimer,\n  TImer,\n}\n"]},"metadata":{},"sourceType":"module"}